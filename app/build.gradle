apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.adam.ganky"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    def dependencies = rootProject.ext.dependencies

    compile dependencies.supportAppCompat
    compile dependencies.supportRecyclerview
    compile dependencies.supportCardView
    compile dependencies.supportDesign

    kapt dependencies.daggerCompiler
    compile dependencies.dagger

//    kapt dependencies.roomCompiler
//    compile dependencies.roomRuntime

    compile dependencies.retrofit
    compile dependencies.retrofitGsonConverter
    compile dependencies.retrofitRxjavaAdapter2
    compile dependencies.okhttpLoggingInterceptor
    compile dependencies.rxJava2
    compile dependencies.rxAndroid2
//    compile dependencies.rxLifecycle2
//    compile dependencies.rxBinding2
    compile dependencies.rxPermission2
    compile dependencies.adapterHelper
    compile dependencies.timber

    kapt dependencies.glideCompiler
    compile dependencies.glide

    compile dependencies.kotlinStdlib
    compile dependencies.kotlinReflect

    compile 'com.gyf.barlibrary:barlibrary:2.3.0'// 沉浸式状态栏和导航栏

    testCompile 'junit:junit:4.12'
}

kotlin {
    experimental {
        coroutines "error"
    }
}