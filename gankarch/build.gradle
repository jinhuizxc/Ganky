apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.adam.gankarch"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'

    def dependencies = rootProject.ext.dependencies

    compile dependencies.supportAppCompat
    compile dependencies.supportRecyclerview
    compile dependencies.supportCardView
    compile dependencies.supportDesign
//    compile dependencies.constraintLayout

    compile dependencies.retrofit
    compile dependencies.retrofitGsonConverter
    compile dependencies.okhttpLoggingInterceptor

    compile dependencies.rxJava2
    compile dependencies.rxAndroid2
    compile dependencies.retrofitRxjavaAdapter2

    compile dependencies.adapterHelper
    compile dependencies.timber
    kapt dependencies.glideCompiler
    compile dependencies.glide
    compile dependencies.utilCode

    compile dependencies.kotlinStdlib
    compile dependencies.kotlinReflect

    // arch
    kapt dependencies.archCompiler
    compile dependencies.archRuntime
    compile dependencies.archExtensions

}

kotlin {
    experimental {
        coroutines "error"
    }
}
